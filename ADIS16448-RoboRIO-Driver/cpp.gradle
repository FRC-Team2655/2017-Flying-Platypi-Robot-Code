defineWpiUtilProperties()
defineHALProperties()
defineNetworkTablesProperties()
defineWpiLibProperties()

def cppSetupModel = { project ->
    project.model {
        components {
            ADIS16448(NativeLibrarySpec) {
                targetPlatform 'arm'
                setupDefines(project, binaries)

                binaries.all {
                    tasks.withType(CppCompile) {
                        cppCompiler.args "-DNAMESPACED_WPILIB"
                        addHalLibraryLinks(it, linker, targetPlatform)
                        addWpiUtilLibraryLinks(it, linker, targetPlatform)
                        addNetworkTablesLibraryLinks(it, linker, targetPlatform)
                        addWpilibLibraryLinks(it, linker, targetPlatform)
                    }
                }

                sources {
                    cpp {
                        source {
                            srcDirs = [cppSrc]
                            includes = ["**/*.cpp"]
                        }
                        exportedHeaders {
                            srcDirs = [cppInclude, wpilibInclude, halInclude, wpiUtilInclude, netTablesInclude]
                            includes = ['**/*.h']
                        }
                    }
                }
            }
        }
    }
}

apply plugin: 'cpp'

apply from: "${rootDir}/toolchains/arm.gradle"

apply from: "${rootDir}/Java/java.gradle"

cppSetupModel(project)

project.debugStripSetup()
